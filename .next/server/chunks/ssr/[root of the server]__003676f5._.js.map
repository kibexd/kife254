{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nocki/Documents/GITHUB%20%F0%9F%A7%91%F0%9F%8F%BC%E2%80%8D%F0%9F%92%BB/kife254/components/theme-provider.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\"\nimport type { ThemeProviderProps } from \"next-themes\"\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  const [mounted, setMounted] = React.useState(false)\n\n  // Ensure we only render theme-dependent components after hydration\n  React.useEffect(() => {\n    setMounted(true)\n  }, [])\n\n  // Set default theme to dark if system preference is not available\n  React.useEffect(() => {\n    if (mounted) {\n      const systemPrefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      const currentTheme = localStorage.getItem(\"theme\")\n\n      if (!currentTheme) {\n        // If no theme is set, use system preference or default to dark\n        const newTheme = systemPrefersDark ? \"system\" : \"dark\"\n        localStorage.setItem(\"theme\", newTheme)\n      }\n    }\n  }, [mounted])\n\n  if (!mounted) {\n    return <>{children}</>\n  }\n\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAMO,SAAS,cAAc,EAAE,QAAQ,EAAE,GAAG,OAA2B;IACtE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAE;IAE7C,mEAAmE;IACnE,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,WAAW;IACb,GAAG,EAAE;IAEL,kEAAkE;IAClE,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,IAAI,SAAS;YACX,MAAM,oBAAoB,OAAO,UAAU,CAAC,gCAAgC,OAAO;YACnF,MAAM,eAAe,aAAa,OAAO,CAAC;YAE1C,IAAI,CAAC,cAAc;gBACjB,+DAA+D;gBAC/D,MAAM,WAAW,oBAAoB,WAAW;gBAChD,aAAa,OAAO,CAAC,SAAS;YAChC;QACF;IACF,GAAG;QAAC;KAAQ;IAEZ,IAAI,CAAC,SAAS;QACZ,qBAAO;sBAAG;;IACZ;IAEA,qBAAO,8OAAC,gJAAA,CAAA,gBAAkB;QAAE,GAAG,KAAK;kBAAG;;;;;;AACzC","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nocki/Documents/GITHUB%20%F0%9F%A7%91%F0%9F%8F%BC%E2%80%8D%F0%9F%92%BB/kife254/contexts/layout-context.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { createContext, useContext, useState, useEffect } from \"react\"\n\ntype LayoutMode = \"standard\" | \"sidebar\"\n\ninterface LayoutContextType {\n  layoutMode: LayoutMode\n  toggleLayout: () => void\n  isTransitioning: boolean\n}\n\nconst LayoutContext = createContext<LayoutContextType | undefined>(undefined)\n\n// Debounce utility function\nconst debounce = <T extends (...args: any[]) => void>(func: T, delay: number) => {\n  let timeout: NodeJS.Timeout;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), delay);\n  };\n};\n\nexport function LayoutProvider({ children }: { children: React.ReactNode }) {\n  // Initialize layoutMode to a server-safe default. It will be updated client-side.\n  const [layoutMode, setLayoutMode] = useState<LayoutMode>(\"standard\");\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [isMobile, setIsMobile] = useState<boolean | null>(null); // null means not determined yet\n\n  useEffect(() => {\n    // This effect runs only on the client after initial render\n    const initialIsMobile = window.innerWidth < 768;\n    setIsMobile(initialIsMobile);\n\n    const savedLayout = localStorage.getItem(\"layoutMode\") as LayoutMode | null;\n    let initialLayout: LayoutMode;\n\n    if (initialIsMobile) {\n      initialLayout = \"standard\";\n    } else {\n      initialLayout = savedLayout || \"sidebar\"; // Default to sidebar if desktop and no saved preference\n    }\n    setLayoutMode(initialLayout);\n\n    const handleResize = () => {\n      const currentIsMobile = window.innerWidth < 768;\n      if (isMobile !== currentIsMobile) { // Only update if mobile status actually changes\n        setIsMobile(currentIsMobile);\n      }\n    };\n\n    const debouncedHandleResize = debounce(handleResize, 100);\n    window.addEventListener(\"resize\", debouncedHandleResize);\n\n    return () => window.removeEventListener(\"resize\", debouncedHandleResize);\n  }, []); // Run only once on mount\n\n  // Effect to update layoutMode when isMobile changes (after initial setup)\n  useEffect(() => {\n    // Only proceed if isMobile has been determined\n    if (isMobile === null) return;\n\n    let desiredLayout: LayoutMode;\n    if (isMobile) {\n      desiredLayout = \"standard\";\n    } else {\n      const savedLayout = localStorage.getItem(\"layoutMode\") as LayoutMode | null;\n      desiredLayout = savedLayout || \"sidebar\";\n    }\n\n    if (layoutMode !== desiredLayout) {\n      setLayoutMode(desiredLayout);\n    }\n  }, [isMobile, layoutMode]); // Depend only on isMobile and layoutMode (for comparison)\n\n  const toggleLayout = () => {\n    // Only allow toggling if isMobile has been determined and it's not mobile\n    if (isMobile !== null && !isMobile) {\n      setLayoutMode((prev) => {\n        const newMode = prev === \"standard\" ? \"sidebar\" : \"standard\";\n        localStorage.setItem(\"layoutMode\", newMode);\n        return newMode;\n      });\n    }\n  };\n\n  return (\n    <LayoutContext.Provider value={{ layoutMode, toggleLayout, isTransitioning }}>{children}</LayoutContext.Provider>\n  );\n}\n\nexport function useLayout() {\n  const context = useContext(LayoutContext);\n  if (context === undefined) {\n    throw new Error(\"useLayout must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\n"],"names":[],"mappings":";;;;;AAGA;AAHA;;;AAaA,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAiC;AAEnE,4BAA4B;AAC5B,MAAM,WAAW,CAAqC,MAAS;IAC7D,IAAI;IACJ,OAAO,CAAC,GAAG;QACT,aAAa;QACb,UAAU,WAAW,IAAM,QAAQ,OAAO;IAC5C;AACF;AAEO,SAAS,eAAe,EAAE,QAAQ,EAAiC;IACxE,kFAAkF;IAClF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc;IACzD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,OAAO,gCAAgC;IAEhG,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,2DAA2D;QAC3D,MAAM,kBAAkB,OAAO,UAAU,GAAG;QAC5C,YAAY;QAEZ,MAAM,cAAc,aAAa,OAAO,CAAC;QACzC,IAAI;QAEJ,IAAI,iBAAiB;YACnB,gBAAgB;QAClB,OAAO;YACL,gBAAgB,eAAe,WAAW,wDAAwD;QACpG;QACA,cAAc;QAEd,MAAM,eAAe;YACnB,MAAM,kBAAkB,OAAO,UAAU,GAAG;YAC5C,IAAI,aAAa,iBAAiB;gBAChC,YAAY;YACd;QACF;QAEA,MAAM,wBAAwB,SAAS,cAAc;QACrD,OAAO,gBAAgB,CAAC,UAAU;QAElC,OAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;IACpD,GAAG,EAAE,GAAG,yBAAyB;IAEjC,0EAA0E;IAC1E,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,+CAA+C;QAC/C,IAAI,aAAa,MAAM;QAEvB,IAAI;QACJ,IAAI,UAAU;YACZ,gBAAgB;QAClB,OAAO;YACL,MAAM,cAAc,aAAa,OAAO,CAAC;YACzC,gBAAgB,eAAe;QACjC;QAEA,IAAI,eAAe,eAAe;YAChC,cAAc;QAChB;IACF,GAAG;QAAC;QAAU;KAAW,GAAG,0DAA0D;IAEtF,MAAM,eAAe;QACnB,0EAA0E;QAC1E,IAAI,aAAa,QAAQ,CAAC,UAAU;YAClC,cAAc,CAAC;gBACb,MAAM,UAAU,SAAS,aAAa,YAAY;gBAClD,aAAa,OAAO,CAAC,cAAc;gBACnC,OAAO;YACT;QACF;IACF;IAEA,qBACE,8OAAC,cAAc,QAAQ;QAAC,OAAO;YAAE;YAAY;YAAc;QAAgB;kBAAI;;;;;;AAEnF;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}}]
}